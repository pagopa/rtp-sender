logging.level.org.springframework.security: DEBUG
activation.baseUrl: http://localhost:8080/

spring:
  security:
    oauth2:
      client:
        registration:
          mil-auth:
            provider: mil-auth
            client-id: test-client-id
            client-secret: test-client-secret
            client-authentication-method: client_secret_post
            authorization-grant-type: client_credentials
            client-name: Test ID Provider
        provider:
          mil-auth:
            token-uri: https://test.idprovider.org/auth/token

  cloud:
    azure:
      monitor:
        connection-string: ${APPLICATIONINSIGHTS_CONNECTION_STRING:InstrumentationKey=fe73c58e-6bc0-449d-b59a-eb7d8cbb0d82;Ing}

    function:
      definition: gdpMessageConsumer
    stream:
      bindings:
        gdpMessageConsumer-in-0:
          destination: ${gdp.eventhub.consumer.topic}
          group: ${gdp.eventhub.consumer.group}
          content-type: application/json
          binder: test-binder
      binders:
        test-binder:
          type: kafka
          environment:
            spring:
              cloud:
                stream:
                  kafka:
                    binder:
                      auto-create-topics: false
                      brokers: ${spring.embedded.kafka.brokers}
                      consumerProperties:
                        key:
                          deserializer: org.apache.kafka.common.serialization.StringDeserializer
                        value:
                          deserializer: org.apache.kafka.common.serialization.StringDeserializer

gdp:
  eventhub:
    name: test-name
    connection-string: Endpoint=sb://test.servicebus.windows.net/;SharedAccessKeyName=${gdp.eventhub.name};SharedAccessKey=test"
    consumer:
      topic: test-topic
      group: test-group

azure.cosmos:
  uri: https://example.com/db/endpoint
  key: your-primary-key
  database: rtp

service-provider:
  base-url: ${SP_BASE_URL:http://localhost:8080/rtp/rtps/}
  activation:
    api-version: v1
  send:
    epc-mock-url: ${EPC_MOCK_URL:http://localhost:8080/rtp/mock}
    timeout: ${EPC_SEND_TIMEOUT_MS:10000}
    retry:
      max-attempts: ${EPC_SEND_RETRY_MAX_ATTEMPTS:3}
      backoff-min-duration: ${EPC_SEND_RETRY_BACKOFF_MIN_DURATION_MS:1000}
      backoff-jitter: ${EPC_SEND_RETRY_BACKOFF_JITTER:0.75}

cache:
  params: [


  ]

blob-storage:
  storage-account-name: test
  container-name: test-container
  blob-name: testname.json
  managed-identity: fake

client:
  ssl:
    pfx-file: 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
    pfx-password: test
    pfx-type: PKCS12
    protocol: TLS
    jks-trust-store-path: ./src/test/resources/test.jks
    jks-trust-store-password: testpass
callback:
  url:
    send: https://spsrtp.api.cstar.pagopa.it/send

pagopa:
  details:
    iban: iban
    fiscal-code: fiscal_code
  operation-slug:
    send: /send-operation-slug
    cancel: /cancel-operation-slug