openapi: 3.0.3
info:
  title: pagoPa RTP - OpenAPI 3.x
  description: DESCRIPTION
  version: 0.0.1
  contact:
    email: cstar@pagopa.it
servers:
  - url: http://localhost:8080
tags:
  - name: rtps
    description: API Group aims to notify a pagoPa notice through Request To Pay (RTP)
paths:
  /rtps:
    get:
      operationId: findRtpByNoticeNumber
      summary: Retrieve a RTP by the Notice Number associated to it
      description: Returns RTP data associated with the given ID
      tags: [ rtps ]
      security:
        - oAuth2: [ admin_rtp_send, read_rtp_send ]
      parameters:
        - $ref: '#/components/parameters/NoticeNumber'
        - $ref: '#/components/parameters/Version'
      responses:
        "200":
          $ref: '#/components/responses/findRtp'
        "400":
          #description: Bad request.
          $ref: '#/components/responses/Error'
        "401":
          #description: Wrong credentials.
          $ref: '#/components/responses/Error'
        "403":
          #description: Forbidden.
          $ref: '#/components/responses/Error'
        "404":
          #description: Not found.
          $ref: '#/components/responses/Error'
        "406":
          #description: Not acceptable. Did you require application/json?
          $ref: '#/components/responses/Error'
        "429":
          #description: Too many requests
          $ref: '#/components/responses/Error'
        "500":
          #description: Server error.
          $ref: '#/components/responses/Error'
        "504":
          #description: Timeout communicating with Debtor Service Provider.
          $ref: '#/components/responses/Error'
        default:
          #description: Unexpected error.
          $ref: '#/components/responses/Error'
    post:
      tags:
        - rtps
      operationId: "createRtp"
      parameters:
        - $ref: '#/components/parameters/Version'
      security:
        - oAuth2: [ admin_rtp_send, write_rtp_send ]
      summary: "Create and send a new RTP from a pagoPa notice"
      description: "Create and send a new RTP from a pagoPa notice"
      requestBody:
        description: "pagoPa notice's details to create as RTP"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRtp"
      responses:
        "201":
          description: "Request to pay created and sent"
          headers:
            Location:
              required: true
              description: "The location of created rtp"
              schema:
                $ref: "#/components/schemas/RtpLocation"
        "400":
          description: "The request is malformed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedRequestErrorResponse'
        "422":
          description: "The debtor is not activated by the Service Provider"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MismatchActivationErrorResponse'

  /rtps/{rtpId}/cancel:
    post:
      operationId: cancelRtp
      summary: Cancels a RTP.
      description: The operation cancels a RTP searching it by its ID.
      tags: [ rtps ]
      security:
        - oAuth2: [ admin_rtp_send, write_rtp_send ]
      parameters:
        - $ref: '#/components/parameters/RequestId'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/RtpId'
      responses:
        "204":
          #description: No content
          $ref: '#/components/responses/NoContent'
        "400":
          #description: Bad request
          $ref: '#/components/responses/Error'
        "401":
          #description: Wrong credentials
          $ref: '#/components/responses/Error'
        "403":
          #description: Forbidden
          $ref: '#/components/responses/Error'
        "404":
          #description: Not found
          $ref: '#/components/responses/Error'
        "406":
          #description: Not acceptable. Did you require application/json?
          $ref: '#/components/responses/Error'
        "422":
          #description: Unprocessable entity
          $ref: '#/components/responses/Error'
        "429":
          #description: Too many request
          $ref: '#/components/responses/Error'
        "500":
          #description: Server error
          $ref: '#/components/responses/Error'
        "504":
          #description: Timeout communicating with Debtor Service Provider
          $ref: '#/components/responses/Error'
        default:
          #description: Unexpected error
          $ref: '#/components/responses/Error'

  /rtps/{rtpId}:
    get:
      operationId: findRtpById
      summary: Retrieve a RTP by its ID
      description: Returns RTP data associated with the given ID
      tags: [ rtps ]
      security:
        - oAuth2: [ admin_rtp_send, read_rtp_send ]
      parameters:
        - $ref: '#/components/parameters/RequestId'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/RtpId'
      responses:
        "200":
          $ref: '#/components/responses/findRtp'
        "400":
          #description: Bad request.
          $ref: '#/components/responses/Error'
        "401":
          #description: Wrong credentials.
          $ref: '#/components/responses/Error'
        "403":
          #description: Forbidden.
          $ref: '#/components/responses/Error'
        "404":
          #description: Not found.
          $ref: '#/components/responses/Error'
        "406":
          #description: Not acceptable. Did you require application/json?
          $ref: '#/components/responses/Error'
        "429":
          #description: Too many requests
          $ref: '#/components/responses/Error'
        "500":
          #description: Server error.
          $ref: '#/components/responses/Error'
        "504":
          #description: Timeout communicating with Debtor Service Provider.
          $ref: '#/components/responses/Error'
        default:
          #description: Unexpected error.
          $ref: '#/components/responses/Error'

components:
  schemas:
    AccessControlAllowOrigin:
      description: |
        Indicates whether the response can be shared with requesting code from
        the given origin.
      type: string
      pattern: "^[ -~]{1,2048}$"
      minLength: 1
      maxLength: 2048

    RateLimitLimit:
      description: The number of allowed requests in the current period.
      type: integer
      format: int32
      minimum: 1
      maximum: 240

    RateLimitReset:
      description: The number of seconds left in the current period.
      type: integer
      format: int32
      minimum: 1
      maximum: 60

    RetryAfter:
      description: |
        The number of seconds to wait before allowing a follow-up request.
      type: integer
      format: int32
      minimum: 1
      maximum: 240

    ErrorCode:
      description: Error code.
      type: string
      pattern: "^[A-F0-9]{9}$"
      minLength: 9
      maxLength: 9
      example: "01000000F"

    ErrorDescription:
      description: Error description.
      type: string
      pattern: "^[ -~]{0,256}$"
      minLength: 0
      maxLength: 256
      example: "Wrong party identifier"

    StatusCode:
      description: HTTP status code.
      type: integer
      format: int32
      minimum: 0
      maximum: 999
      example: 401

    Error:
      description: Error details.
      type: object
      additionalProperties: false
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode'
        description:
          $ref: '#/components/schemas/ErrorDescription'
      required:
        - code
        - description
      example:
        code: "01000000F"
        description: "Wrong party identifier"

    Errors:
      description: |
        Error details.
        The format depends on the component which returns it.
      oneOf:
        - $ref: '#/components/schemas/Type1Error'
        - $ref: '#/components/schemas/Type2Error'
        - $ref: '#/components/schemas/Type3Error'

    Type1Error:
      description: List of errors returned by the application.
      type: object
      additionalProperties: false
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 32
          items:
            $ref: '#/components/schemas/Error'
      required:
        - errors
      example:
        errors:
          - code: "01000000F"
            description: "Wrong party identifier"

    Type2Error:
      description: Error details returned by the APIM.
      type: object
      additionalProperties: false
      properties:
        statusCode:
          $ref: '#/components/schemas/StatusCode'
        message:
          $ref: '#/components/schemas/ErrorDescription'
      required:
        - statusCode
        - message
      example:
        statusCode: 401
        message: "Invalid JWT."

    Type3Error:
      description: Error details returned by the framework.
      type: object
      additionalProperties: false
      properties:
        timestamp:
          description: Timestamp the error occurred.
          type: string
          format: date-time
          minLength: 19
          maxLength: 29
          pattern: "^((?:(\\d{4}-\\d{2}-\\d{2})T(\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?))(Z|[\\+-]\\d{2}:\\d{2})?)$"
        path:
          description: API path where the error occurred.
          type: string
          pattern: "^[ -~]{1,1024}$"
          minLength: 1
          maxLength: 1024
        status:
          $ref: '#/components/schemas/StatusCode'
        error:
          $ref: '#/components/schemas/ErrorDescription'
        requestId:
          description: ID of the request.
          type: string
          pattern: "^[ -~]{1,128}$"
          minLength: 1
          maxLength: 128
      required:
        - timestamp
        - path
        - status
        - error
        - requestId
      example:
        timestamp: "2024-12-31T09:54:01.763+00:00"
        path: "/activations"
        status: 415
        error: "Unsupported Media Type"
        requestId: "3fb00d0f-416"

    AmountEuroCents:
      description: Amount for payments, in euro cents
      type: number
      minimum: 0
      maximum: 99999999999

    NoticeNumber:
      type: string
      pattern: "\\d{18}"
      description: "pagoPa notice's code"
      example: "311111111112222222"
      externalDocs:
        description: "See noticeNumber field"
        url: "https://docs.pagopa.it/sanp/appendici/primitive#verifypaymentnotice-1"

    Payee:
      type: object
      properties:
        payeeId:
          $ref: "#/components/schemas/PayeeId"
        name:
          type: string
          maxLength: 140
          description: "The name of payee (e.g. EC name or Company Name)"
          example: "Comune di Roma"
        payTrxRef:
          $ref: "#/components/schemas/PayTrxRef"
      required:
        - payeeId
        - name
        - payTrxRef
  
    Payer:
      type: object
      properties:
        payerId:
          $ref: "#/components/schemas/PayerId"
        name:
          type: string
          maxLength: 140
          description: "The name of payer."
          example: "Mario Rossi"
      required:
        - payerId
        - name

    PaymentNotice:
      type: object
      properties:
        noticeNumber:
          $ref: "#/components/schemas/NoticeNumber"
        amount:
          $ref: "#/components/schemas/AmountEuroCents"
        description:
          type: string
          description: "The pagopa notice's description"
          maxLength: 140
        subject:
          type: string
          description: "The subject of payment ( e.g. TARI 2025 )"
          maxLength: 140
        expiryDate:
          type: string
          description: "The pagoPa notice's expiry date. Formatted as ISO 8601 [YYYY]-[MM]-[DD]"
          format: date
          example: "2024-12-03"
      required:
        - noticeNumber
        - amount
        - description
        - subject
        - expiryDate

    PayerId:
      type: string
      description: "The id of the recipient of the request to pay. The id is the fiscal code"
      pattern: "^(([A-Z]{6}\\d{2}[A-Z]\\d{2}[A-Z]\\d{3}[A-Z])|(\\d{11}))$"
      example: "ABCDEF12G34H567I"

    PayeeId:
      type: string
      pattern: "\\d{11}|\\d{16}"
      description: "The payee id (e.g. EC fiscal code)"
      example: "77777777777"
      externalDocs:
        description: "See idPA field"
        url: "https://docs.pagopa.it/sanp/appendici/primitive#paverifypaymentnotice"

    PayTrxRef:
      type: string
      pattern: "^[ -~]{1,140}$"
      description: "The Pay Transaction Reference"
      example: "ABC/124"

    RtpId:
      type: string
      format: uuid
      description: "Request to pay unique id"

    RtpLocation:
      type: string
      description: "The location of created resource"
      format: url
      example: "https://domain.com/rtps/{rtpId}"

    CreateRtp:
      type: object
      properties:
        payee:
          $ref: "#/components/schemas/Payee"
        payer:
          $ref: "#/components/schemas/Payer"
        paymentNotice:
          $ref: "#/components/schemas/PaymentNotice"
      required:
        - paymentNotice
        - payer
        - payee

    Rtp:
      type: object
      properties:
        resourceID:
          type: string
          format: uuid
          minLength: 36
          maxLength: 36
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          example: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
        noticeNumber:
          type: string
          minLength: 18
          maxLength: 18
          pattern: "^\\d{18}$"
          example: "311111111112222123"
        amount:
          type: number
          format: double
          example: 1050.75
        description:
          type: string
          minLength: 1
          maxLength: 255
          pattern: "^[ -~]{1,255}$"
          example: "Paga questo avviso"
        expiryDate:
          type: string
          format: date
          minLength: 10
          maxLength: 30
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          example: "2025-12-31"
        payerName:
          type: string
          minLength: 1
          maxLength: 255
          pattern: "^[ -~]{1,255}$"
          example: "Pigrolo"
        payerId:
          type: string
          minLength: 11
          maxLength: 16
          pattern: "^(([A-Z]{6}\\d{2}[A-Z]\\d{2}[A-Z]\\d{3}[A-Z])|(\\d{11}))$"
          example: "RSSMRA85T10A562S"
        payeeName:
          type: string
          minLength: 1
          maxLength: 255
          pattern: "^[ -~]{1,255}$"
          example: "Comune di Roma"
        payeeId:
          type: string
          minLength: 11
          maxLength: 16
          pattern: "\\d{11}|\\d{16}"
          example: "77777777777"
        subject:
          type: string
          minLength: 1
          maxLength: 255
          pattern: "^[ -~]{1,255}$"
          example: "TARI 2025"
        savingDateTime:
          type: string
          format: date-time
          minLength: 10
          maxLength: 30
          pattern: "^((?:(\\d{4}-\\d{2}-\\d{2})T(\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?))(Z|[\\+-]\\d{2}:\\d{2})?)$"
          example: "2025-06-06T08:40:16.781Z"
        serviceProviderDebtor:
          type: string
          minLength: 1
          maxLength: 100
          pattern: "^[ -~]{1,100}$"
          example: "FAKESP01"
        iban:
          type: string
          minLength: 15
          maxLength: 34
          pattern: "^[A-Z]{2}\\d{2}[A-Z0-9]{1,30}$"
          example: "IT60X0542811101000000123456"
        payTrxRef:
          type: string
          minLength: 1
          maxLength: 64
          pattern: "^[ -~]{1,64}$"
          example: "ABC/124"
        flgConf:
          type: string
          minLength: 1
          maxLength: 10
          pattern: "^[a-zA-Z_]{1,10}$"
          example: "flgConf"
        status:
          $ref: '#/components/schemas/RtpStatus'
        serviceProviderCreditor:
          type: string
          minLength: 1
          maxLength: 100
          pattern: "^[ -~]{1,100}$"
          example: "PA123456789"
        events:
          type: array
          maxItems: 100
          items:
            $ref: '#/components/schemas/Event'
          example:
            - timestamp: "2025-06-06T08:40:16.781Z"
              precStatus: "CREATED"
              triggerEvent: "CREATE_RTP"

    Event:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          maxLength: 30
          pattern: "^((?:(\\d{4}-\\d{2}-\\d{2})T(\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?))(Z|[\\+-]\\d{2}:\\d{2})?)$"
        precStatus:
          $ref: '#/components/schemas/RtpStatus'
        triggerEvent:
          $ref: '#/components/schemas/RtpEvent'
      required:
        - timestamp
        - triggerEvent

    RtpStatus:
      type: string
      enum:
        - CREATED
        - SENT
        - CANCELLED
        - ACCEPTED
        - REJECTED
        - USER_ACCEPTED
        - USER_REJECTED
        - PAYED
        - ERROR_SEND
        - CANCELLED_ACCR
        - CANCELLED_REJECTED
        - ERROR_CANCEL

    RtpEvent:
      type: string
      enum:
        - CREATE_RTP
        - SEND_RTP
        - CANCEL_RTP
        - ACCEPT_RTP
        - REJECT_RTP
        - USER_ACCEPT_RTP
        - USER_REJECT_RTP
        - PAY_RTP
        - ERROR_SEND_RTP
        - ERROR_CANCEL_RTP
        - CANCEL_RTP_ACCR
        - CANCEL_RTP_REJECTED
  
    MalformedRequestErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Malformed request"
        details:
          type: string
          example: "The request is malformed. Please check the request's body and try again."

    MismatchActivationErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Debtor's fiscal code is not activated"
        details:
          type: string
          example: "The debtor's fiscal code provided is not activated by thr subject making the request."

    RequestId:
      description: Identifier of the request.
      type: string
      format: uuid
      pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
      minLength: 36
      maxLength: 36
      example: "bd615b4a-066d-443e-8dd2-a28a39931fef"

    Version:
      description: Version of the required API.
      type: string
      pattern: "^[ -~]{1,64}$"
      minLength: 1
      maxLength: 64
      example: "v1"

  responses:
    NoContent:
      description: Response returned when there isn't a content to return.
      headers:
        Access-Control-Allow-Origin:
          description: |
            Indicates whether the response can be shared with requesting code
            from the given origin.
          required: false
          schema:
            $ref: '#/components/schemas/AccessControlAllowOrigin'
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          required: false
          schema:
            $ref: '#/components/schemas/RateLimitLimit'
        RateLimit-Reset:
          description: The number of seconds left in the current period
          required: false
          schema:
            $ref: '#/components/schemas/RateLimitReset'
        Retry-After:
          description: |
            The number of seconds to wait before allowing a follow-up request.
          required: false
          schema:
            $ref: '#/components/schemas/RetryAfter'

    findRtp:
      description: RTP successfully retrieved by ID.
      headers:
        Access-Control-Allow-Origin:
          description: |
            Indicates whether the response can be shared with requesting code
            from the given origin.
          required: false
          schema:
            $ref: '#/components/schemas/AccessControlAllowOrigin'
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          required: false
          schema:
            $ref: '#/components/schemas/RateLimitLimit'
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          required: false
          schema:
            $ref: '#/components/schemas/RateLimitReset'
        Retry-After:
          description: |
            The number of seconds to wait before allowing a follow-up request.
          required: false
          schema:
            $ref: '#/components/schemas/RetryAfter'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rtp'

    Error:
      description: Response returned when an error occured.
      headers:
        Access-Control-Allow-Origin:
          description: |
            Indicates whether the response can be shared with requesting code
            from the given origin.
          required: false
          schema:
            $ref: '#/components/schemas/AccessControlAllowOrigin'
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          required: false
          schema:
            $ref: '#/components/schemas/RateLimitLimit'
        RateLimit-Reset:
          description: The number of seconds left in the current period
          required: false
          schema:
            $ref: '#/components/schemas/RateLimitReset'
        Retry-After:
          description: |
            The number of seconds to wait before allowing a follow-up request.
          required: false
          schema:
            $ref: '#/components/schemas/RetryAfter'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
        text/*:
          schema:
            type: string
            pattern: "^[ -~]{0,65535}$"
            maxLength: 65535



  parameters:

    RequestId:
      name: RequestId
      in: header
      description: Identifier of the request.
      required: true
      schema:
        $ref: '#/components/schemas/RequestId'

    NoticeNumber:
      name: noticeNumber
      in: query
      description: Notice number associated to a RTP.
      required: true
      schema:
        $ref: '#/components/schemas/NoticeNumber'

    RtpId:
      name: rtpId
      in: path
      description: Identifier of a RTP.
      required: true
      schema:
        $ref: '#/components/schemas/RtpId'

    Version:
      name: Version
      in: header
      description: Version of the required API.
      required: false
      schema:
        $ref: '#/components/schemas/Version'